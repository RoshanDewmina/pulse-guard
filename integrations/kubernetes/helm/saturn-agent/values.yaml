# Default values for saturn-agent
# This is a YAML-formatted file.

# Saturn API configuration
saturn:
  # Your Saturn API key (required)
  # You can also create a secret manually and reference it below
  apiKey: ""
  
  # Saturn API endpoint (default: https://saturn.co)
  endpoint: "https://saturn.co"
  
  # Existing secret containing the API key
  # If set, apiKey above is ignored
  # Secret should have a key named 'api-key'
  existingSecret: ""

# Agent configuration
agent:
  # Kubernetes namespace to watch (empty = all namespaces)
  namespace: ""
  
  # Sync period for full reconciliation
  syncPeriod: "5m"
  
  # Log verbosity level (0-10, higher = more verbose)
  verbosity: 2

# Image configuration
image:
  repository: saturn/k8s-agent
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use
  name: ""

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  fsGroup: 65534

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

# Resources
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Priority class
priorityClassName: ""

# Additional environment variables
env: []
# - name: HTTP_PROXY
#   value: "http://proxy:8080"

# Additional volumes
volumes: []
# - name: custom-ca
#   configMap:
#     name: custom-ca-certificates

# Additional volume mounts
volumeMounts: []
# - name: custom-ca
#   mountPath: /etc/ssl/certs
#   readOnly: true

