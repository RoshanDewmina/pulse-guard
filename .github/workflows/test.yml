name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run database migrations
        run: cd packages/db && bunx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Run web app tests
        run: cd apps/web && bun test
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          DATABASE_URL_UNPOOLED: postgresql://test:test@localhost:5432/test
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret-key-at-least-32-characters-long
          NEXTAUTH_URL: https://app.test.com
          JWT_SECRET: test-jwt-secret-at-least-32-characters-long

      - name: Run worker tests
        run: cd apps/worker && bun test
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          REDIS_URL: redis://localhost:6379

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./apps/web/coverage/lcov.info,./apps/worker/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run database migrations
        run: cd packages/db && bunx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Run integration tests
        run: cd apps/web && bun test src/__tests__/integration/
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          DATABASE_URL_UNPOOLED: postgresql://test:test@localhost:5432/test
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret-key-at-least-32-characters-long
          NEXTAUTH_URL: https://app.test.com
          JWT_SECRET: test-jwt-secret-at-least-32-characters-long

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Install Playwright Browsers
        run: cd apps/web && bunx playwright install --with-deps chromium

      - name: Run database migrations
        run: cd packages/db && bunx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Build application
        run: cd apps/web && bun run build
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          DATABASE_URL_UNPOOLED: postgresql://test:test@localhost:5432/test
          NEXTAUTH_SECRET: test-secret-key-at-least-32-characters-long
          NEXTAUTH_URL: http://localhost:3000
          JWT_SECRET: test-jwt-secret-at-least-32-characters-long

      - name: Run E2E tests
        run: cd apps/web && bunx playwright test --project=chromium
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          DATABASE_URL_UNPOOLED: postgresql://test:test@localhost:5432/test
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret-key-at-least-32-characters-long
          NEXTAUTH_URL: http://localhost:3000
          JWT_SECRET: test-jwt-secret-at-least-32-characters-long

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run accessibility tests
        run: cd apps/web && bun test src/__tests__/accessibility/
        env:
          NEXTAUTH_SECRET: test-secret-key-at-least-32-characters-long
          NEXTAUTH_URL: https://app.test.com
          JWT_SECRET: test-jwt-secret-at-least-32-characters-long

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run TypeScript type check
        run: |
          cd apps/web && bun run tsc --noEmit
          cd ../worker && bun run tsc --noEmit

      - name: Run linter
        run: cd apps/web && bun run lint

